input NewFlag {
    key: String!
    name: String!
    description: String
}

input UpdateFlag {
    key: String
    name: String
    description: String
    enabled: Boolean
}

input NewVariant {
    key: String!
    description: String
    value: Any!
    defaultWhenOn: Boolean
    defaultWhenOff: Boolean
}

input UpdateVariant {
    key: String
    description: String
    value: Any
    defaultWhenOn: Boolean
    defaultWhenOff: Boolean
}

input NewConstraint {
    property: String!
    operation: Operation!
    values: [Any!]!
}

input NewDistribution {
    variantId: ID!
    percentage: Int!
}

input NewFlagRule {
    constraints: [NewConstraint!]!
    distributions: [NewDistribution!]!
}

input UpdateFlagRule {
    constraints: [NewConstraint!]!
    distributions: [NewDistribution!]!
}

input NewSegmentRule {
    constraints: [NewConstraint!]!
}

input UpdateSegmentRule {
    constraints: [NewConstraint!]!
}

input NewSegment {
    key: String!
    name: String!
    description: String
}

input UpdateSegment {
    key: String
    name: String
    description: String
}

extend type Query {
    flags(offset: Int, limit: Int): [Flag!]!
    flag(id: ID!): Flag
    segments(offset: Int, limit: Int): [Segment!]!
    segment(id: ID!): Segment
}

extend type Mutation {
    createFlag(input: NewFlag!): Flag!
    updateFlag(id: ID!, input: UpdateFlag!): Flag!
    deleteFlag(id: ID!): Boolean!

    createVariant(flagId: ID!, input: NewVariant!): ID!
    updateVariant(flagId: ID!, id: ID!, input: UpdateVariant!): Boolean!
    deleteVariant(flagId: ID!, id: ID!): Boolean!

    createFlagRule(flagId: ID!, input: NewFlagRule!): ID!
    updateFlagRule(flagId: ID!, id: ID!, input: UpdateFlagRule!): Boolean!
    deleteFlagRule(flagId: ID!, id: ID!): Boolean!
    createSegmentRule(segmentId: ID!, input: NewSegmentRule!): ID!
    updateSegmentRule(segmentId: ID!, id: ID!, input: UpdateSegmentRule!): Boolean!
    deleteSegmentRule(segmentId: ID!, id: ID!): Boolean!

    createSegment(input: NewSegment!): Segment!
    updateSegment(id: ID!, input: UpdateSegment!): Boolean!
    deleteSegment(id: ID!): Boolean!
}